apiVersion: v1
kind: ServiceAccount
metadata:
  name: cert-watcher-account
  namespace: cockroachdb
  labels:
    app: cockroachdb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cert-manager-configmaps-role
  namespace: cert-manager
  labels:
    app: cockroachdb
rules:
  - apiGroups: [""]
    resources: ["configmaps"]
    verbs: ["get", "create", "update", "patch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cockroachdb-secrets-role
  namespace: cockroachdb
  labels:
    app: cockroachdb
rules:
  - apiGroups: [""]
    resources: ["secrets"]
    verbs: ["get", "watch"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: Role
metadata:
  name: cockroachdb-pods-role
  namespace: cockroachdb
  labels:
    app: cockroachdb
rules:
  - apiGroups: [""]
    resources: ["pods"]
    verbs: ["get", "list"]
  - apiGroups: [""]
    resources: ["pods/exec"]
    verbs: ["create"]
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cert-manager-configmaps-role-binding
  namespace: cert-manager
  labels:
    app: cockroachdb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cert-manager-configmaps-role
subjects:
  - kind: ServiceAccount
    name: cert-watcher-account
    namespace: cockroachdb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cockroachdb-secrets-role-binding
  namespace: cockroachdb
  labels:
    app: cockroachdb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cockroachdb-secrets-role
subjects:
  - kind: ServiceAccount
    name: cert-watcher-account
    namespace: cockroachdb
---
apiVersion: rbac.authorization.k8s.io/v1
kind: RoleBinding
metadata:
  name: cockroachdb-pods-role-binding
  namespace: cockroachdb
  labels:
    app: cockroachdb
roleRef:
  apiGroup: rbac.authorization.k8s.io
  kind: Role
  name: cockroachdb-pods-role
subjects:
  - kind: ServiceAccount
    name: cert-watcher-account
    namespace: cockroachdb
---
apiVersion: v1
kind: Pod
metadata:
  name: cert-watcher
  namespace: cockroachdb
  labels:
    app: cockroachdb
spec:
  serviceAccountName: cert-watcher-account
  containers:
    - name: cert-watcher
      image: bitnami/kubectl:latest
      command: ["/bin/bash", "/scripts/watcher.sh"]
      env:
        - name: KUBERNETES_SERVICE_HOST
          value: "kubernetes.default.svc"
      volumeMounts:
        - name: script-volume
          mountPath: /scripts
        - name: varlib-volume
          mountPath: /var/lib/watcher
  volumes:
    - name: script-volume
      configMap:
        name: cert-watcher-script
        defaultMode: 0777
    - name: varlib-volume
      emptyDir: {}
